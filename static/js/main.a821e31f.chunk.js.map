{"version":3,"sources":["features/dataTable/dataTableSlice.js","features/dataRow/DataRow.js","features/dataTable/DataTable.js","App.js","app/store.js","serviceWorker.js","index.js","features/dataRow/DataRow.module.css","features/dataTable/DataTable.module.css"],"names":["start","dataLength","dataLengthIndex","dataTableSlice","createSlice","name","initialState","data","displayData","page","reducers","appendData","state","action","push","payload","length","id","setDisplayData","slice","limit","deleteItem","removalIndex","findIndex","item","splice","updateItem","find","title","updateRow","dispatch","a","fetchData","url","fetch","response","json","actions","selectDisplayData","dataTable","DataRow","props","useDispatch","useState","edit","setEdit","editValue","setEditValue","editButton","onClick","saveButton","deleteButton","deleteRow","albumId","className","styles","tableRow","value","onChange","event","target","imageDiv","href","rel","image","src","thumbnailUrl","alt","loading","DataTable","useSelector","useEffect","tableHeader","map","App","configureStore","reducer","dataTableReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a821e31f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nlet start = 0,\r\n  limit = 5,\r\n  dataLength = 0,\r\n  dataLengthIndex = 0;\r\n\r\nexport const dataTableSlice = createSlice({\r\n  name: \"dataTable\",\r\n  initialState: {\r\n    data: [],\r\n    displayData: [],\r\n    page: 0,\r\n  },\r\n  reducers: {\r\n    appendData: (state, action) => {\r\n      state.data.push(...action.payload);\r\n      dataLength = state.data.length;\r\n      dataLengthIndex = state.data[state.data.length - 1].id;\r\n    },\r\n\r\n    setDisplayData: (state, action) => {\r\n      state.displayData = state.data.slice(\r\n        action.payload.start,\r\n        action.payload.start + action.payload.limit\r\n      );\r\n    },\r\n\r\n    deleteItem: (state, action) => {\r\n      const removalIndex = state.data.findIndex((item) => item.id === action.payload.id);\r\n      dataLengthIndex = state.data[state.data.length - 1].id;\r\n      state.data.splice(removalIndex, 1);\r\n      dataLength = state.data.length;\r\n    },\r\n\r\n    updateItem: (state, action) => {\r\n      state.data.find((item) => item.id === action.payload.id).title = action.payload.title;\r\n    },\r\n  },\r\n});\r\n\r\nexport const deleteRow = ({ id }) => async (dispatch) => {\r\n  dispatch(deleteItem({ id }));\r\n  const data = await fetchData(\"http://jsonplaceholder.typicode.com/photos\", dataLengthIndex, 1);\r\n  dataLengthIndex = dataLengthIndex + 1;\r\n\r\n  dispatch(appendData(data));\r\n  dispatch(setDisplayData({ start, limit }));\r\n};\r\n\r\nexport const updateRow = ({ id, title }) => async (dispatch) => {\r\n  dispatch(updateItem({ id, title }));\r\n  dispatch(setDisplayData({ start, limit }));\r\n};\r\n\r\nexport const previousAsync = () => async (dispatch) => {\r\n  if (start >= limit) start -= limit;\r\n  dispatch(setDisplayData({ start, limit }));\r\n};\r\n\r\nexport const nextAsync = () => async (dispatch) => {\r\n  start = start + limit;\r\n  if (start + limit > dataLength) {\r\n    const data = await fetchData(\r\n      \"http://jsonplaceholder.typicode.com/photos\",\r\n      dataLengthIndex,\r\n      limit\r\n    );\r\n    dataLengthIndex = dataLengthIndex + limit;\r\n    dispatch(appendData(data));\r\n  }\r\n  dispatch(setDisplayData({ start, limit }));\r\n};\r\n\r\nexport const fetchAPIData = () => async (dispatch) => {\r\n  const data = await fetchData(\"http://jsonplaceholder.typicode.com/photos\", start, limit);\r\n  dispatch(appendData(data));\r\n  dispatch(setDisplayData({ start, limit }));\r\n  dataLengthIndex = start + limit;\r\n};\r\n\r\nasync function fetchData(url, start, limit) {\r\n  const response = await fetch(`${url}?_start=${start}&_limit=${limit}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport const { setDisplayData, appendData, deleteItem, updateItem } = dataTableSlice.actions;\r\nexport const selectDisplayData = (state) => state.dataTable.displayData;\r\nexport default dataTableSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteRow, updateRow } from \"../dataTable/dataTableSlice\";\r\n\r\nimport styles from \"./DataRow.module.css\";\r\n\r\nexport function DataRow(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const [editValue, setEditValue] = useState(props.data.title);\r\n\r\n  function setValue(event) {\r\n    setEditValue(event.target.value);\r\n  }\r\n\r\n  function onSavelickHandler() {\r\n    if (editValue === \"\") {\r\n      dispatch(updateRow({ id: props.data.id, title: props.data.title }));\r\n    } else {\r\n      dispatch(updateRow({ id: props.data.id, title: editValue }));\r\n    }\r\n    setEdit(false);\r\n  }\r\n\r\n  function onEditlickHandler() {\r\n    setEdit(true);\r\n  }\r\n\r\n  const editButton = <button onClick={onEditlickHandler}>Edit</button>;\r\n  const saveButton = <button onClick={onSavelickHandler}>Save</button>;\r\n  const deleteButton = (\r\n    <button onClick={() => dispatch(deleteRow({ albumId: props.data.albumId, id: props.data.id }))}>\r\n      Delete\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div className={styles.tableRow}>\r\n      <div className={styles.albumId}>{props.data.albumId}</div>\r\n      <div className={styles.id}>{props.data.id}</div>\r\n      {edit ? (\r\n        <input className={styles.title} name=\"title\" value={editValue} onChange={setValue} />\r\n      ) : (\r\n        <div className={styles.title}>{props.data.title}</div>\r\n      )}\r\n      <div className={styles.imageDiv}>\r\n        <a href={props.data.url} target=\"_blank\" rel=\"noreferrer\">\r\n          <img className={styles.image} src={props.data.thumbnailUrl} alt=\"album\" loading=\"lazy\" />\r\n        </a>\r\n      </div>\r\n      {deleteButton}\r\n      {edit ? saveButton : editButton}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { nextAsync, previousAsync, fetchAPIData, selectDisplayData } from \"./dataTableSlice\";\r\nimport styles from \"./DataTable.module.css\";\r\n\r\nimport { DataRow } from \"../dataRow/DataRow\";\r\n\r\nexport function DataTable() {\r\n  const displayData = useSelector(selectDisplayData);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAPIData());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.tableHeader}>\r\n        <div className={styles.albumId}>Album Id</div>\r\n        <div className={styles.id}>Id</div>\r\n        <div className={styles.title}>Title</div>\r\n      </div>\r\n\r\n      {displayData?.length === 0 ? (\r\n        \"No data found\"\r\n      ) : (\r\n        <div>\r\n          {displayData.map((data) => (\r\n            <DataRow key={data.id} data={data} />\r\n          ))}\r\n          <button onClick={() => dispatch(previousAsync())}>Previous</button>\r\n          <button onClick={() => dispatch(nextAsync())}>Next</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DataTable } from \"./features/dataTable/DataTable\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <DataTable />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport dataTableReducer from \"../features/dataTable/dataTableSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    dataTable: dataTableReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"DataRow_tableRow__3N_P8\",\"albumId\":\"DataRow_albumId__1ZbvM\",\"id\":\"DataRow_id__2SXNc\",\"title\":\"DataRow_title__3Ru1N\",\"imageDiv\":\"DataRow_imageDiv__9XcWC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"DataTable_tableHeader__2IjC3\",\"albumId\":\"DataTable_albumId__3OA13\",\"id\":\"DataTable_id__1pSW-\",\"title\":\"DataTable_title__1h6ed\",\"image\":\"DataTable_image__CCqrb\"};"],"sourceRoot":""}